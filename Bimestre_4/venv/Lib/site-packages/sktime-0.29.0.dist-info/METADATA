Metadata-Version: 2.1
Name: sktime
Version: 0.29.0
Summary: A unified framework for machine learning with time series
Author-email: sktime developers <sktime.toolbox@gmail.com>
Maintainer: Franz Kir√°ly, Jonathan Bechtel, Kiril Ralinovski, Marc Rovira, Sagar Mishra, Ugochukwu Onyeka
Maintainer-email: sktime developers <sktime.toolbox@gmail.com>
License: BSD 3-Clause License
        
        Copyright (c) 2019 - present, The sktime developers.
        
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this
          list of conditions and the following disclaimer.
        
        * Redistributions in binary form must reproduce the above copyright notice,
          this list of conditions and the following disclaimer in the documentation
          and/or other materials provided with the distribution.
        
        * Neither the name of the copyright holder nor the names of its
          contributors may be used to endorse or promote products derived from
          this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: API Reference, https://www.sktime.net/en/stable/api_reference.html
Project-URL: Documentation, https://www.sktime.net
Project-URL: Download, https://pypi.org/project/sktime/#files
Project-URL: Homepage, https://www.sktime.net
Project-URL: Release Notes, https://www.sktime.net/en/stable/changelog.html
Project-URL: Repository, https://github.com/sktime/sktime
Keywords: data-mining,data-science,forecasting,machine-learning,scikit-learn,time-series,time-series-analysis,time-series-classification,time-series-regression
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development
Requires-Python: <3.13,>=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy <1.27,>=1.21
Requires-Dist: packaging
Requires-Dist: pandas <2.3.0,>=1.1
Requires-Dist: scikit-base <0.8.0,>=0.6.1
Requires-Dist: scikit-learn <1.5.0,>=0.24
Requires-Dist: scipy <2.0.0,>=1.2
Provides-Extra: alignment
Requires-Dist: dtw-python <1.5,>=1.3 ; extra == 'alignment'
Requires-Dist: numba <0.60,>=0.53 ; extra == 'alignment'
Provides-Extra: all_extras
Requires-Dist: arch <7.1.0,>=5.6 ; extra == 'all_extras'
Requires-Dist: cloudpickle ; extra == 'all_extras'
Requires-Dist: dash !=2.9.0 ; extra == 'all_extras'
Requires-Dist: dtw-python ; extra == 'all_extras'
Requires-Dist: gluonts >=0.9 ; extra == 'all_extras'
Requires-Dist: holidays ; extra == 'all_extras'
Requires-Dist: kotsu >=0.3.1 ; extra == 'all_extras'
Requires-Dist: matplotlib >=3.3.2 ; extra == 'all_extras'
Requires-Dist: mne ; extra == 'all_extras'
Requires-Dist: numba <0.60,>=0.53 ; extra == 'all_extras'
Requires-Dist: pycatch22 <0.4.4 ; extra == 'all_extras'
Requires-Dist: pykalman <0.10,>=0.9.5 ; extra == 'all_extras'
Requires-Dist: scikit-optimize ; extra == 'all_extras'
Requires-Dist: scikit-posthocs >=0.6.5 ; extra == 'all_extras'
Requires-Dist: seaborn >=0.11 ; extra == 'all_extras'
Requires-Dist: seasonal ; extra == 'all_extras'
Requires-Dist: skpro <2.3.0,>=2 ; extra == 'all_extras'
Requires-Dist: statsmodels >=0.12.1 ; extra == 'all_extras'
Requires-Dist: tsbootstrap <0.2,>=0.1.0 ; extra == 'all_extras'
Requires-Dist: xarray ; extra == 'all_extras'
Requires-Dist: dask <2024.4.2 ; (extra == "dataframe") and extra == 'all_extras'
Requires-Dist: esig ==0.9.7 ; (python_version < "3.10") and extra == 'all_extras'
Requires-Dist: filterpy >=1.4.5 ; (python_version < "3.11") and extra == 'all_extras'
Requires-Dist: hmmlearn >=0.2.7 ; (python_version < "3.11") and extra == 'all_extras'
Requires-Dist: keras-self-attention ; (python_version < "3.11") and extra == 'all_extras'
Requires-Dist: pyod >=0.8 ; (python_version < "3.11") and extra == 'all_extras'
Requires-Dist: stumpy >=1.5.1 ; (python_version < "3.11") and extra == 'all_extras'
Requires-Dist: tslearn !=0.6.0,<0.7.0,>=0.5.2 ; (python_version < "3.11") and extra == 'all_extras'
Requires-Dist: h5py ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: pmdarima !=1.8.1,<3.0.0,>=1.8 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: prophet >=1.1 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: pyts <0.14.0 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: statsforecast <1.8.0,>=1.0.0 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: tbats >=1.1 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: tensorflow <2.17,>=2 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: tsfresh >=0.17 ; (python_version < "3.12") and extra == 'all_extras'
Requires-Dist: temporian !=0.8.0,<0.9.0,>=0.7.0 ; (python_version < "3.12" and sys_platform != "win32") and extra == 'all_extras'
Provides-Extra: all_extras_pandas2
Requires-Dist: arch <7.1.0,>=5.6 ; extra == 'all_extras_pandas2'
Requires-Dist: cloudpickle ; extra == 'all_extras_pandas2'
Requires-Dist: dash !=2.9.0 ; extra == 'all_extras_pandas2'
Requires-Dist: dtw-python ; extra == 'all_extras_pandas2'
Requires-Dist: gluonts >=0.9 ; extra == 'all_extras_pandas2'
Requires-Dist: holidays ; extra == 'all_extras_pandas2'
Requires-Dist: kotsu >=0.3.1 ; extra == 'all_extras_pandas2'
Requires-Dist: matplotlib >=3.3.2 ; extra == 'all_extras_pandas2'
Requires-Dist: mne ; extra == 'all_extras_pandas2'
Requires-Dist: numba <0.60,>=0.53 ; extra == 'all_extras_pandas2'
Requires-Dist: pycatch22 <0.4.4 ; extra == 'all_extras_pandas2'
Requires-Dist: pykalman <0.10,>=0.9.5 ; extra == 'all_extras_pandas2'
Requires-Dist: scikit-posthocs >=0.6.5 ; extra == 'all_extras_pandas2'
Requires-Dist: seaborn >=0.11 ; extra == 'all_extras_pandas2'
Requires-Dist: seasonal ; extra == 'all_extras_pandas2'
Requires-Dist: skpro <2.3.0,>=2 ; extra == 'all_extras_pandas2'
Requires-Dist: statsmodels >=0.12.1 ; extra == 'all_extras_pandas2'
Requires-Dist: tsbootstrap <0.2,>=0.1.0 ; extra == 'all_extras_pandas2'
Requires-Dist: xarray ; extra == 'all_extras_pandas2'
Requires-Dist: dask <2024.4.2 ; (extra == "dataframe") and extra == 'all_extras_pandas2'
Requires-Dist: esig ==0.9.7 ; (python_version < "3.10") and extra == 'all_extras_pandas2'
Requires-Dist: filterpy >=1.4.5 ; (python_version < "3.11") and extra == 'all_extras_pandas2'
Requires-Dist: hmmlearn >=0.2.7 ; (python_version < "3.11") and extra == 'all_extras_pandas2'
Requires-Dist: keras-self-attention ; (python_version < "3.11") and extra == 'all_extras_pandas2'
Requires-Dist: pyod >=0.8 ; (python_version < "3.11") and extra == 'all_extras_pandas2'
Requires-Dist: stumpy >=1.5.1 ; (python_version < "3.11") and extra == 'all_extras_pandas2'
Requires-Dist: tslearn !=0.6.0,<0.7.0,>=0.5.2 ; (python_version < "3.11") and extra == 'all_extras_pandas2'
Requires-Dist: h5py ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: pmdarima !=1.8.1,<3.0.0,>=1.8 ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: prophet >=1.1 ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: statsforecast <1.8.0,>=1.0.0 ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: tbats >=1.1 ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: tensorflow <2.17,>=2 ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: tsfresh >=0.17 ; (python_version < "3.12") and extra == 'all_extras_pandas2'
Requires-Dist: temporian !=0.8.0,<0.9.0,>=0.7.0 ; (python_version < "3.12" and sys_platform != "win32") and extra == 'all_extras_pandas2'
Provides-Extra: annotation
Requires-Dist: hmmlearn <0.4,>=0.2.7 ; extra == 'annotation'
Requires-Dist: numba <0.60,>=0.53 ; extra == 'annotation'
Requires-Dist: pyod <1.2,>=0.8 ; (python_version < "3.12") and extra == 'annotation'
Provides-Extra: binder
Requires-Dist: jupyter ; extra == 'binder'
Requires-Dist: pandas <2.0.0 ; extra == 'binder'
Provides-Extra: classification
Requires-Dist: numba <0.60,>=0.53 ; extra == 'classification'
Requires-Dist: esig <0.10,>=0.9.7 ; (python_version < "3.11") and extra == 'classification'
Requires-Dist: tensorflow <2.17,>=2 ; (python_version < "3.12") and extra == 'classification'
Requires-Dist: tsfresh <0.21,>=0.17 ; (python_version < "3.12") and extra == 'classification'
Provides-Extra: clustering
Requires-Dist: numba <0.60,>=0.53 ; extra == 'clustering'
Requires-Dist: tslearn !=0.6.0,<0.7.0,>=0.5.2 ; (python_version < "3.12") and extra == 'clustering'
Provides-Extra: cython_extras
Requires-Dist: mrseql ; extra == 'cython_extras'
Requires-Dist: numba <0.60 ; extra == 'cython_extras'
Requires-Dist: mrsqm ; (python_version < "3.11") and extra == 'cython_extras'
Provides-Extra: dev
Requires-Dist: backoff ; extra == 'dev'
Requires-Dist: httpx ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytest-randomly ; extra == 'dev'
Requires-Dist: pytest-timeout ; extra == 'dev'
Requires-Dist: pytest-xdist ; extra == 'dev'
Requires-Dist: wheel ; extra == 'dev'
Provides-Extra: dl
Requires-Dist: neuralforecast <1.8.0,>=1.6.4 ; (python_version < "3.11") and extra == 'dl'
Requires-Dist: FrEIA ; (python_version < "3.12") and extra == 'dl'
Requires-Dist: tensorflow <2.17,>=2 ; (python_version < "3.12") and extra == 'dl'
Requires-Dist: torch ; (python_version < "3.12") and extra == 'dl'
Requires-Dist: transformers[torch] ; (python_version < "3.12") and extra == 'dl'
Provides-Extra: docs
Requires-Dist: jupyter ; extra == 'docs'
Requires-Dist: myst-parser ; extra == 'docs'
Requires-Dist: nbsphinx >=0.8.6 ; extra == 'docs'
Requires-Dist: numpydoc ; extra == 'docs'
Requires-Dist: pydata-sphinx-theme ; extra == 'docs'
Requires-Dist: Sphinx !=7.2.0,<8.0.0 ; extra == 'docs'
Requires-Dist: sphinx-copybutton ; extra == 'docs'
Requires-Dist: sphinx-design <0.6.0 ; extra == 'docs'
Requires-Dist: sphinx-gallery <0.17.0 ; extra == 'docs'
Requires-Dist: sphinx-issues <5.0.0 ; extra == 'docs'
Requires-Dist: tabulate ; extra == 'docs'
Provides-Extra: forecasting
Requires-Dist: arch <7.1,>=5.6 ; extra == 'forecasting'
Requires-Dist: prophet <1.2,>=1.1 ; extra == 'forecasting'
Requires-Dist: skpro <2.3.0,>=2 ; extra == 'forecasting'
Requires-Dist: statsmodels <0.15,>=0.12.1 ; extra == 'forecasting'
Requires-Dist: pmdarima !=1.8.1,<2.1,>=1.8 ; (python_version < "3.12") and extra == 'forecasting'
Requires-Dist: statsforecast <1.8.0,>=1.0.0 ; (python_version < "3.12") and extra == 'forecasting'
Requires-Dist: tbats <1.2,>=1.1 ; (python_version < "3.12") and extra == 'forecasting'
Provides-Extra: mlflow
Requires-Dist: mlflow ; extra == 'mlflow'
Provides-Extra: mlflow_tests
Requires-Dist: boto3 ; extra == 'mlflow_tests'
Requires-Dist: botocore ; extra == 'mlflow_tests'
Requires-Dist: mlflow ; extra == 'mlflow_tests'
Requires-Dist: moto ; extra == 'mlflow_tests'
Provides-Extra: networks
Requires-Dist: keras-self-attention <0.52,>=0.51 ; extra == 'networks'
Requires-Dist: tensorflow <2.17,>=2 ; (python_version < "3.12") and extra == 'networks'
Provides-Extra: pandas1
Requires-Dist: pandas <2.0.0 ; extra == 'pandas1'
Provides-Extra: param_est
Requires-Dist: seasonal <0.4,>=0.3.1 ; extra == 'param_est'
Requires-Dist: statsmodels <0.15,>=0.12.1 ; extra == 'param_est'
Provides-Extra: regression
Requires-Dist: numba <0.60,>=0.53 ; extra == 'regression'
Requires-Dist: tensorflow <2.17,>=2 ; (python_version < "3.12") and extra == 'regression'
Provides-Extra: tests
Requires-Dist: pytest <8.3,>=7.4 ; extra == 'tests'
Requires-Dist: pytest-cov <5.1,>=4.1 ; extra == 'tests'
Requires-Dist: pytest-randomly <3.16,>=3.15 ; extra == 'tests'
Requires-Dist: pytest-timeout <2.4,>=2.1 ; extra == 'tests'
Requires-Dist: pytest-xdist <3.7,>=3.3 ; extra == 'tests'
Provides-Extra: transformations
Requires-Dist: filterpy <1.5,>=1.4.5 ; extra == 'transformations'
Requires-Dist: holidays <0.48,>=0.29 ; extra == 'transformations'
Requires-Dist: mne <1.8,>=1.5 ; extra == 'transformations'
Requires-Dist: numba <0.60,>=0.53 ; extra == 'transformations'
Requires-Dist: pycatch22 <0.4.4,>=0.4 ; extra == 'transformations'
Requires-Dist: pykalman <0.10,>=0.9.5 ; extra == 'transformations'
Requires-Dist: statsmodels <0.15,>=0.12.1 ; extra == 'transformations'
Requires-Dist: tsbootstrap <0.2,>=0.1.0 ; extra == 'transformations'
Requires-Dist: esig <0.10,>=0.9.7 ; (python_version < "3.11") and extra == 'transformations'
Requires-Dist: stumpy <1.13,>=1.5.1 ; (python_version < "3.12") and extra == 'transformations'
Requires-Dist: tsfresh <0.21,>=0.17 ; (python_version < "3.12") and extra == 'transformations'
Requires-Dist: temporian !=0.8.0,<0.9.0,>=0.7.0 ; (python_version < "3.12" and sys_platform != "win32") and extra == 'transformations'

<a href="https://www.sktime.net"><img src="https://github.com/sktime/sktime/blob/main/docs/source/images/sktime-logo.svg" width="175" align="right" /></a>

# Welcome to sktime

> A unified interface for machine learning with time series

:rocket: **Version 0.29.0 out now!** [Check out the release notes here](https://www.sktime.net/en/latest/changelog.html).

sktime is a library for time series analysis in Python. It provides a unified interface for multiple time series learning tasks. Currently, this includes time series classification, regression, clustering, annotation, and forecasting. It comes with [time series algorithms](https://www.sktime.net/en/stable/estimator_overview.html) and [scikit-learn] compatible tools to build, tune and validate time series models.

[scikit-learn]: https://scikit-learn.org/stable/

| Overview | |
|---|---|
| **Open&#160;Source** | [![BSD 3-clause](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://github.com/sktime/sktime/blob/main/LICENSE) |
| **Tutorials** | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sktime/sktime/main?filepath=examples) [![!youtube](https://img.shields.io/static/v1?logo=youtube&label=YouTube&message=tutorials&color=red)](https://www.youtube.com/playlist?list=PLKs3UgGjlWHqNzu0LEOeLKvnjvvest2d0) |
| **Community** | [![!discord](https://img.shields.io/static/v1?logo=discord&label=discord&message=chat&color=lightgreen)](https://discord.com/invite/54ACzaFsn7) [![!slack](https://img.shields.io/static/v1?logo=linkedin&label=LinkedIn&message=news&color=lightblue)](https://www.linkedin.com/company/scikit-time/)  |
| **CI/CD** | [![github-actions](https://img.shields.io/github/actions/workflow/status/sktime/sktime/wheels.yml?logo=github)](https://github.com/sktime/sktime/actions/workflows/wheels.yml) [![!codecov](https://img.shields.io/codecov/c/github/sktime/sktime?label=codecov&logo=codecov)](https://codecov.io/gh/sktime/sktime) [![readthedocs](https://img.shields.io/readthedocs/sktime?logo=readthedocs)](https://www.sktime.net/en/latest/?badge=latest) [![platform](https://img.shields.io/conda/pn/conda-forge/sktime)](https://github.com/sktime/sktime) |
| **Code** |  [![!pypi](https://img.shields.io/pypi/v/sktime?color=orange)](https://pypi.org/project/sktime/) [![!conda](https://img.shields.io/conda/vn/conda-forge/sktime)](https://anaconda.org/conda-forge/sktime) [![!python-versions](https://img.shields.io/pypi/pyversions/sktime)](https://www.python.org/) [![!black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)  |
| **Downloads**| [![Downloads](https://static.pepy.tech/personalized-badge/sktime?period=week&units=international_system&left_color=grey&right_color=blue&left_text=weekly%20(pypi))](https://pepy.tech/project/sktime) [![Downloads](https://static.pepy.tech/personalized-badge/sktime?period=month&units=international_system&left_color=grey&right_color=blue&left_text=monthly%20(pypi))](https://pepy.tech/project/sktime) [![Downloads](https://static.pepy.tech/personalized-badge/sktime?period=total&units=international_system&left_color=grey&right_color=blue&left_text=cumulative%20(pypi))](https://pepy.tech/project/sktime) |
| **Citation** | [![!zenodo](https://zenodo.org/badge/DOI/10.5281/zenodo.3749000.svg)](https://doi.org/10.5281/zenodo.3749000) |

## :books: Documentation

| Documentation              |                                                                |
| -------------------------- | -------------------------------------------------------------- |
| :star: **[Tutorials]**        | New to sktime? Here's everything you need to know!              |
| :clipboard: **[Binder Notebooks]** | Example notebooks to play with in your browser.              |
| :woman_technologist: **[User Guides]**      | How to use sktime and its features.                             |
| :scissors: **[Extension Templates]** | How to build your own estimator using sktime's API.            |
| :control_knobs: **[API Reference]**      | The detailed reference for sktime's API.                        |
| :tv: **[Video Tutorial]**            | Our video tutorial from 2021 PyData Global.      |
| :hammer_and_wrench: **[Changelog]**          | Changes and version history.                                   |
| :deciduous_tree: **[Roadmap]**          | sktime's software and community development plan.                                   |
| :pencil: **[Related Software]**          | A list of related software. |

[tutorials]: https://www.sktime.net/en/latest/tutorials.html
[binder notebooks]: https://mybinder.org/v2/gh/sktime/sktime/main?filepath=examples
[user guides]: https://www.sktime.net/en/latest/user_guide.html
[video tutorial]: https://github.com/sktime/sktime-tutorial-pydata-global-2021
[api reference]: https://www.sktime.net/en/latest/api_reference.html
[changelog]: https://www.sktime.net/en/latest/changelog.html
[roadmap]: https://www.sktime.net/en/latest/roadmap.html
[related software]: https://www.sktime.net/en/latest/related_software.html

## :speech_balloon: Where to ask questions

Questions and feedback are extremely welcome! We strongly believe in the value of sharing help publicly, as it allows a wider audience to benefit from it.

| Type                            | Platforms                               |
| ------------------------------- | --------------------------------------- |
| :bug: **Bug Reports**              | [GitHub Issue Tracker]                  |
| :sparkles: **Feature Requests & Ideas** | [GitHub Issue Tracker]                       |
| :woman_technologist: **Usage Questions**          | [GitHub Discussions] ¬∑ [Stack Overflow] |
| :speech_balloon: **General Discussion**        | [GitHub Discussions] |
| :factory: **Contribution & Development** | `dev-chat` channel ¬∑ [Discord] |
| :globe_with_meridians: **Meet-ups and collaboration sessions** | [Discord] - Fridays 4 pm UTC, dev/meet-ups channel |

[github issue tracker]: https://github.com/sktime/sktime/issues
[github discussions]: https://github.com/sktime/sktime/discussions
[stack overflow]: https://stackoverflow.com/questions/tagged/sktime
[discord]: https://discord.com/invite/54ACzaFsn7

## :dizzy: Features
Our objective is to enhance the interoperability and usability of the time series analysis ecosystem in its entirety. sktime provides a __unified interface for distinct but related time series learning tasks__. It features [__dedicated time series algorithms__](https://www.sktime.net/en/stable/estimator_overview.html) and __tools for composite model building__  such as pipelining, ensembling, tuning, and reduction, empowering users to apply an algorithm designed for one task to another.

sktime also provides **interfaces to related libraries**, for example [scikit-learn], [statsmodels], [tsfresh], [PyOD], and [fbprophet], among others.

[statsmodels]: https://www.statsmodels.org/stable/index.html
[tsfresh]: https://tsfresh.readthedocs.io/en/latest/
[pyod]: https://pyod.readthedocs.io/en/latest/
[fbprophet]: https://facebook.github.io/prophet/

| Module | Status | Links |
|---|---|---|
| **[Forecasting]** | stable | [Tutorial](https://www.sktime.net/en/latest/examples/01_forecasting.html) ¬∑ [API Reference](https://www.sktime.net/en/latest/api_reference/forecasting.html) ¬∑ [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/forecasting.py)  |
| **[Time Series Classification]** | stable | [Tutorial](https://github.com/sktime/sktime/blob/main/examples/02_classification.ipynb) ¬∑ [API Reference](https://www.sktime.net/en/latest/api_reference/classification.html) ¬∑ [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/classification.py) |
| **[Time Series Regression]** | stable | [API Reference](https://www.sktime.net/en/latest/api_reference/regression.html) |
| **[Transformations]** | stable | [Tutorial](https://github.com/sktime/sktime/blob/main/examples/03_transformers.ipynb) ¬∑ [API Reference](https://www.sktime.net/en/latest/api_reference/transformations.html) ¬∑ [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/transformer.py)  |
| **[Parameter fitting]** | maturing | [API Reference](https://www.sktime.net/en/latest/api_reference/param_est.html) ¬∑ [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/transformer.py)  |
| **[Time Series Clustering]** | maturing | [API Reference](https://www.sktime.net/en/latest/api_reference/clustering.html) ¬∑  [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/clustering.py) |
| **[Time Series Distances/Kernels]** | maturing | [Tutorial](https://github.com/sktime/sktime/blob/main/examples/03_transformers.ipynb) ¬∑ [API Reference](https://www.sktime.net/en/latest/api_reference/dists_kernels.html) ¬∑ [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/dist_kern_panel.py) |
| **[Time Series Alignment]** | experimental | [API Reference](https://www.sktime.net/en/latest/api_reference/alignment.html) ¬∑ [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/alignment.py) |
| **[Annotation]** | experimental | [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/annotation.py) |
| **[Time Series Splitters]** | maturing | [Extension Template](https://github.com/sktime/sktime/blob/main/extension_templates/split.py) | |
| **[Distributions and simulation]** | experimental |  |

[forecasting]: https://github.com/sktime/sktime/tree/main/sktime/forecasting
[time series classification]: https://github.com/sktime/sktime/tree/main/sktime/classification
[time series regression]: https://github.com/sktime/sktime/tree/main/sktime/regression
[time series clustering]: https://github.com/sktime/sktime/tree/main/sktime/clustering
[annotation]: https://github.com/sktime/sktime/tree/main/sktime/annotation
[time series distances/kernels]: https://github.com/sktime/sktime/tree/main/sktime/dists_kernels
[time series alignment]: https://github.com/sktime/sktime/tree/main/sktime/alignment
[transformations]: https://github.com/sktime/sktime/tree/main/sktime/transformations
[distributions and simulation]: https://github.com/sktime/sktime/tree/main/sktime/proba
[time series splitters]: https://github.com/sktime/sktime/tree/main/sktime/split
[parameter fitting]: https://github.com/sktime/sktime/tree/main/sktime/param_est


## :hourglass_flowing_sand: Install sktime
For troubleshooting and detailed installation instructions, see the [documentation](https://www.sktime.net/en/latest/installation.html).

- **Operating system**: macOS X ¬∑ Linux ¬∑ Windows 8.1 or higher
- **Python version**: Python 3.8, 3.9, 3.10, 3.11, and 3.12 (only 64-bit)
- **Package managers**: [pip] ¬∑ [conda] (via `conda-forge`)

[pip]: https://pip.pypa.io/en/stable/
[conda]: https://docs.conda.io/en/latest/

### pip
Using pip, sktime releases are available as source packages and binary wheels.
Available wheels are listed [here](https://pypi.org/simple/sktime/).

```bash
pip install sktime
```

or, with maximum dependencies,

```bash
pip install sktime[all_extras]
```

For curated sets of soft dependencies for specific learning tasks:

```bash
pip install sktime[forecasting]  # for selected forecasting dependencies
pip install sktime[forecasting,transformations]  # forecasters and transformers
```

or similar. Valid sets are:

* `forecasting`
* `transformations`
* `classification`
* `regression`
* `clustering`
* `param_est`
* `networks`
* `annotation`
* `alignment`

Cave: in general, not all soft dependencies for a learning task are installed,
only a curated selection.

### conda
You can also install sktime from `conda` via the `conda-forge` channel.
The feedstock including the build recipe and configuration is maintained
in [this conda-forge repository](https://github.com/conda-forge/sktime-feedstock).

```bash
conda install -c conda-forge sktime
```

or, with maximum dependencies,

```bash
conda install -c conda-forge sktime-all-extras
```

(as `conda` does not support dependency sets,
flexible choice of soft dependencies is unavailable via `conda`)

## :zap: Quickstart

### Forecasting

``` python
from sktime.datasets import load_airline
from sktime.forecasting.base import ForecastingHorizon
from sktime.forecasting.theta import ThetaForecaster
from sktime.split import temporal_train_test_split
from sktime.performance_metrics.forecasting import mean_absolute_percentage_error

y = load_airline()
y_train, y_test = temporal_train_test_split(y)
fh = ForecastingHorizon(y_test.index, is_relative=False)
forecaster = ThetaForecaster(sp=12)  # monthly seasonal periodicity
forecaster.fit(y_train)
y_pred = forecaster.predict(fh)
mean_absolute_percentage_error(y_test, y_pred)
>>> 0.08661467738190656
```

### Time Series Classification

```python
from sktime.classification.interval_based import TimeSeriesForestClassifier
from sktime.datasets import load_arrow_head
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

X, y = load_arrow_head()
X_train, X_test, y_train, y_test = train_test_split(X, y)
classifier = TimeSeriesForestClassifier()
classifier.fit(X_train, y_train)
y_pred = classifier.predict(X_test)
accuracy_score(y_test, y_pred)
>>> 0.8679245283018868
```

## :wave: How to get involved

There are many ways to join the sktime community. We follow the [all-contributors](https://github.com/all-contributors/all-contributors) specification: all kinds of contributions are welcome - not just code.

| Documentation              |                                                                |
| -------------------------- | --------------------------------------------------------------        |
| :gift_heart: **[Contribute]**        | How to contribute to sktime.          |
| :school_satchel:  **[Mentoring]** | New to open source? Apply to our mentoring program! |
| :date: **[Meetings]** | Join our discussions, tutorials, workshops, and sprints! |
| :woman_mechanic:  **[Developer Guides]**      | How to further develop sktime's code base.                             |
| :construction: **[Enhancement Proposals]** | Design a new feature for sktime. |
| :medal_sports: **[Contributors]** | A list of all contributors. |
| :raising_hand: **[Roles]** | An overview of our core community roles. |
| :money_with_wings: **[Donate]** | Fund sktime maintenance and development. |
| :classical_building: **[Governance]** | How and by whom decisions are made in sktime's community.   |

[contribute]: https://www.sktime.net/en/latest/get_involved/contributing.html
[donate]: https://opencollective.com/sktime
[extension templates]: https://github.com/sktime/sktime/tree/main/extension_templates
[developer guides]: https://www.sktime.net/en/latest/developer_guide.html
[contributors]: https://github.com/sktime/sktime/blob/main/CONTRIBUTORS.md
[governance]: https://www.sktime.net/en/latest/get_involved/governance.html
[mentoring]: https://github.com/sktime/mentoring
[meetings]: https://calendar.google.com/calendar/u/0/embed?src=sktime.toolbox@gmail.com&ctz=UTC
[enhancement proposals]: https://github.com/sktime/enhancement-proposals
[roles]: https://www.sktime.net/en/latest/about/team.html

## :trophy: Hall of fame

Thanks to all our community for all your wonderful contributions, PRs, issues, ideas.

<a href="https://github.com/sktime/sktime/graphs/contributors">
<img src="https://opencollective.com/sktime/contributors.svg?width=600&button=false" />
</a>
<br>

## :bulb: Project vision

* **By the community, for the community** -- developed by a friendly and collaborative community.
* The **right tool for the right task** -- helping users to diagnose their learning problem and suitable scientific model types.
* **Embedded in state-of-art ecosystems** and **provider of interoperable interfaces** -- interoperable with [scikit-learn], [statsmodels], [tsfresh], and other community favorites.
* **Rich model composition and reduction functionality** -- build tuning and feature extraction pipelines, solve forecasting tasks with [scikit-learn] regressors.
* **Clean, descriptive specification syntax** -- based on modern object-oriented design principles for data science.
* **Fair model assessment and benchmarking** -- build your models, inspect your models, check your models, and avoid pitfalls.
* **Easily extensible** -- easy extension templates to add your own algorithms compatible with sktime's API.
